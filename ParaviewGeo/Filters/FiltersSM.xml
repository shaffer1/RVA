<ServerManagerConfiguration>
  <ProxyGroup name="filters">
                
    <!-- Apply Schedule -->
    <SourceProxy name="Apply Schedule" class="vtkApplySchedule">    
    <InputProperty
     name="Input"
     command="SetInputConnection">
      <ProxyGroupDomain name="groups">
        <Group name="sources"/>
        <Group name="filters"/>
      </ProxyGroupDomain>
      <DataTypeDomain name="input_type">
        <DataType value="vtkDataSet"/>
      </DataTypeDomain>

      <InputArrayDomain name="input_array" number_of_components="1">
        <RequiredProperties>
          <Property name="SelectInputScalars"
                    function="FieldDataSelection"/>
        </RequiredProperties>
      </InputArrayDomain>

    </InputProperty>

    <StringVectorProperty
        name ="fileName"
        command="SetfileName"
        number_of_elements ="1"
        default_values="">
    </StringVectorProperty>

    <StringVectorProperty
       name ="ArraySelection"
       command="SetArraySelection"
      repeat_command="1"
      number_of_elements_per_command="4"
      element_types="2 0 0 0"
      immediate_update="1">
    </StringVectorProperty>

    <IntVectorProperty name="dateFormat_0"
     command="SetdateFormat_0"
     number_of_elements="1"
     default_values="1">
      <EnumerationDomain name="enum">
        <Entry value="1" text="Day"/>
        <Entry value="30" text="Month"/>
        <Entry value="365" text="Year"/>
      </EnumerationDomain>
    </IntVectorProperty>

    <IntVectorProperty name="dateFormat_1"
     command="SetdateFormat_1"
     number_of_elements="1"
     default_values="1">
      <EnumerationDomain name="enum">
        <Entry value="1" text="Day"/>
        <Entry value="30" text="Month"/>
        <Entry value="365" text="Year"/>
      </EnumerationDomain>
    </IntVectorProperty>

    <IntVectorProperty name="dateFormat_2"
     command="SetdateFormat_2"
     number_of_elements="1"
     default_values="1">
      <EnumerationDomain name="enum">
        <Entry value="1" text="Day"/>
        <Entry value="30" text="Month"/>
        <Entry value="365" text="Year"/>
      </EnumerationDomain>
    </IntVectorProperty>

      <IntVectorProperty name="DateType"
       command="SetDateType"
       number_of_elements="1"
       default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="MSDate"/>
          <Entry value="1" text="Julian"/>
          <Entry value="2" text="ModifiedJulian"/>
          <Entry value="3" text="Matlab"/>
        </EnumerationDomain>
      </IntVectorProperty>      

    <StringVectorProperty name="ScheduleSegName"
     command="SetScheduleSegName"
      number_of_elements="1">
    </StringVectorProperty>

    <StringVectorProperty name="DurationPropertyName"
     command="SetDurationPropertyName"
     number_of_elements="1">
    </StringVectorProperty>

    <StringVectorProperty
        name="SegmentID"
        command="SetSegmentID"
        number_of_elements="1"
        animateable="0"
        label="Segment ID">
      <ArrayListDomain name="array_list"
                       attribute_type="Scalars"
                      input_domain_name="input_array">
        <RequiredProperties>
          <Property name="Input" function="Input"/>
        </RequiredProperties>
      </ArrayListDomain>
      <Documentation>
        This property indicates the name of the segment id property in the input data.
      </Documentation>
    </StringVectorProperty>

      <IntVectorProperty name="durationUnits"
       command="SetdurationUnits"
       number_of_elements="1"
       default_values="1">
        <EnumerationDomain name="enum">
          <Entry value="1" text="Day"/>
          <Entry value="30" text="Month"/>
          <Entry value="365" text="Year"/>
          <Entry value="-24" text="Hour"/>
          <Entry value="-1140" text="Minute"/>
          <Entry value="-86400" text="Second"/>
        </EnumerationDomain>
      </IntVectorProperty>
      
    </SourceProxy>

    <!-- Bounding Box -->
    <SourceProxy name="Bounding Box" class="vtkBBox">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
      <DoubleVectorProperty
            name="deltaX"
            command="SetdeltaX"
            number_of_elements="1"
            default_values="100">
        <IntRangeDomain name="range" min="0.0" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
            name="deltaY"
            command="SetdeltaY"
            number_of_elements="1"
            default_values="100">
        <IntRangeDomain name="range" min="0.0" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
            name="deltaZ"
            command="SetdeltaZ"
            number_of_elements="1"
            default_values="100">
        <IntRangeDomain name="range" min="0.0" />
      </DoubleVectorProperty>

      <Hints>
        <Visibility replace_input="3" />
      </Hints>
    </SourceProxy>
  
  <!-- Clean Cells -->  
    <SourceProxy name="Clean Cells" class="vtkCleanCells">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty
         name="PieceInvariant"
         command="SetPieceInvariant"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, the whole data set will be processed at once so that cleaning the data set always produces the same results. If it is set to 0, the data set can be processed one piece at a time, so it is not necessary for the entire data set to fit into memory; however the results are not guaranteed to be the same as they would be if the Piece invariant option was on. Setting this option to 0 may produce seams in the output dataset when ParaView is run in parallel.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Tolerance"
         command="SetTolerance"
         number_of_elements="1"
         animateable="1"
         default_values="0.0" >
        <DoubleRangeDomain name="range" min="0" max="1" />
        <Documentation>
          If merging nearby points (see PointMerging property) and not using absolute tolerance (see ToleranceIsAbsolute property), this property specifies the tolerance for performing merging as a fraction of the length of the diagonal of the bounding box of the input data set.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="AbsoluteTolerance"
         command="SetAbsoluteTolerance"
         number_of_elements="1"
         default_values="0" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          If merging nearby points (see PointMerging property) and using absolute tolerance (see ToleranceIsAbsolute property), this property specifies the tolerance for performing merging in the spatial units of the input data set.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="ToleranceIsAbsolute"
         command="SetToleranceIsAbsolute"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          This property determines whether to use absolute or relative (a percentage of the bounding box) tolerance when performing point merging.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertLinesToPoints"
         command="SetConvertLinesToPoints"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate lines (a "line" whose endpoints are at the same spatial location) will be converted to points.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertPolysToLines"
         command="SetConvertPolysToLines"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate polygons (a "polygon" with only two distinct point coordinates) will be converted to lines.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertStripsToPolys"
         command="SetConvertStripsToPolys"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate triangle strips (a triangle "strip" containing only one triangle) will be converted to triangles.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="PointMerging"
         command="SetPointMerging"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, then points will be merged if they are within the specified Tolerance or AbsoluteTolerance (see the Tolerance and AbsoluteTolerance propertys), depending on the value of the ToleranceIsAbsolute property. (See the ToleranceIsAbsolute property.) If this property is set to 0, points will not be merged.
        </Documentation>
      </IntVectorProperty>
    </SourceProxy>

    <!-- ConvertPointsToBlocks -->
    <SourceProxy name="ConvertPointsToBlocks" class="vtkConvertPointsToBlocks">

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>

        <InputArrayDomain name="input_array1"
                           optional="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>

        <InputArrayDomain name="input_array2"
                           optional="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
            function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>

        <InputArrayDomain name="input_array3"
                           optional="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
            function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>

      <StringVectorProperty name="XEntry"
         command="SetXEntry"
         number_of_elements="1"
         default_values="">
      </StringVectorProperty>

      <StringVectorProperty
         name="YEntry"
         command="SetYEntry"
         number_of_elements="1"
         default_values="">                
      </StringVectorProperty>

      <StringVectorProperty name="ZEntry"
         command="SetZEntry"
         number_of_elements="1"
         default_values="">
      </StringVectorProperty>
      
      <StringVectorProperty
          name="XINC"
          command="SetXINC"
          number_of_elements="1"
          animateable="0"
          label="XINC">
        <ArrayListDomain name="array_list"
             attribute_type="Scalars"
       none_string="Not Available"                  
			 input_domain_name="input_array1">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of X block dimension array
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
          name="YINC"
          command="SetYINC"
          number_of_elements="1"
          animateable="0"
        default_values=""
          label="YINC">
        <ArrayListDomain name="array_list"
             attribute_type="Scalars"
        none_string="Not Available"
			 input_domain_name="input_array2">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of Y block dimension array
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
           name="ZINC"
           command="SetZINC"
           number_of_elements="1"
           animateable="0"
         default_values=""
           label="ZINC">
        <ArrayListDomain name="array_list"
             attribute_type="Scalars"
        none_string="Not Available"                         
			 input_domain_name="input_array3">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of Z block dimension array
        </Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty
        name="SizeCX"
        command="SetSizeCX"
        number_of_elements="1"
        default_values="5.0" >
        <Documentation>
          The dimension Size by X Direction
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
          name="SizeCY"
          command="SetSizeCY"
          number_of_elements="1"
          default_values="5.0" >
        <Documentation>
          The dimension Size by Y Direction
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
          name="SizeCZ"
          command="SetSizeCZ"
          number_of_elements="1"
          default_values="5.0" >
        <Documentation>
          The dimension Size by Z Direction
        </Documentation>
      </DoubleVectorProperty>
    </SourceProxy>

  <!-- Extract Unstructered Grid -->  
    <SourceProxy name="ExtractUnstrucGrid" class="vtkExtractUnstrucGrid"
       label="Extract UnstructuredGrid">
      <Documentation
         long_help="This filter extracts a range of blocks from a multiblock dataset."
         short_help="Extract level.">
        This filter extracts a range of groups from a multiblock dataset
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <DataTypeDomain name="output_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract Group filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
         name="BlockIndices"
         command="AddIndex"
         clean_command="RemoveAllIndices"
         repeat_command="1"
         number_of_elements_per_command="1">
        <CompositeTreeDomain name="tree" mode="all">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </CompositeTreeDomain>
        <Documentation>
          This property lists the ids of the blocks to extract
          from the input multiblock dataset.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="PruneOutput"
         command="SetPruneOutput"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, the output mutliblock dataset will be pruned to remove empty
          nodes. On by default.
        </Documentation>
      </IntVectorProperty>

      <!-- End ExtractBlock -->
    </SourceProxy>  
  
  <!-- ExtractPolyData -->  
    <SourceProxy name="ExtractPolyData" class="vtkExtractPolyData"
       label="Extract PolyData">
      <Documentation
         long_help="This filter extracts a range of blocks from a multiblock dataset."
         short_help="Extract level.">
        This filter extracts a range of groups from a multiblock dataset
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <DataTypeDomain name="output_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract Group filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
         name="BlockIndices"
         command="AddIndex"
         clean_command="RemoveAllIndices"
         repeat_command="1"
         number_of_elements_per_command="1">
        <CompositeTreeDomain name="tree" mode="all">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </CompositeTreeDomain>
        <Documentation>
          This property lists the ids of the blocks to extract
          from the input multiblock dataset.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="PruneOutput"
         command="SetPruneOutput"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, the output mutliblock dataset will be pruned to remove empty
          nodes. On by default.
        </Documentation>
      </IntVectorProperty>

      <!-- End ExtractBlock -->
    </SourceProxy>

    <!-- InsideClosedSurface -->
    <SourceProxy name="InsideClosedSurface" class="vtkInsideClosedSurface">
      <InputProperty
        name="Source"
        command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <InputProperty name="Input"
   command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
    </SourceProxy>
    <!-- End InsideClosedSurface -->
    
    <!-- Intersect Wireframe -->
    <SourceProxy name="Intersect Wireframe" class="vtkIntersectFilter">
      <InputProperty
       name="Source"
       command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty
      name="Type Points"
      command="SetTypeOfPoints"
      number_of_elements="1"
      default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="Inside Points"/>
          <Entry value="1" text="Outside Points"/>
        </EnumerationDomain>
        <Documentation>
          Inside Points show you the points of the grid inside the defined wireframe
          Outside Points show you the points of the grid outside the defined wireframe
        </Documentation>
      </IntVectorProperty>

    </SourceProxy>

     <!-- Map Attributes -->
    <SourceProxy name="Map Attributes" class="vtkMapAttributes">
      <InputProperty
        name="Source"
        command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
        <Documentation>
          This property specifies the input to the Threshold filter.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
         name="SelectInputScalars"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Scalars">
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          The value of this property contains the name of the scalar array from which to perform an operation on.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty
      name="XCubes"
      command="SetXCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
      <IntVectorProperty
      name="YCubes"
      command="SetYCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
      <IntVectorProperty
      name="ZCubes"
      command="SetZCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
    </SourceProxy>

    <!-- Map Attributes To Grid -->
    <SourceProxy name="Map Attributes To Grid" class="vtkMapAttributesToGrid">
      <InputProperty
        name="Source"
        command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
        <Documentation>
          This property specifies the input to the Threshold filter.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
         name="SelectInputScalars"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Scalars">
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          The value of this property contains the name of the scalar array from which to perform an operation on.
        </Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- Map Attributes From Grid -->
    <SourceProxy name="Map Attributes From Grid" class="vtkMapAttributesFromGrid">
      <InputProperty
        name="Source"
        command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
          <!--<DataType value="vtkImageData"/>
          <DataType value="vtkRectilinearGrid"/>
          <DataType value="vtkStructuredPoints"/>
          <DataType value="vtkStructuredGrid"/>-->
        </DataTypeDomain>
        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>
      <StringVectorProperty
        name="SelectInputScalars"
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        label="Scalars">
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
    </SourceProxy>

	<!-- Oriented Bounding Box to Grid -->
    <SourceProxy name="Box to Grid" class="vtkOBBtoGrid">

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty
         name="GridSize"
         command="SetGridSize"
         number_of_elements="3"
         animateable="1"
         default_values="5 5 5" >
        <IntRangeDomain name="range" min="1 1 1" />
        <Documentation>
          This property specifies the number of cube in x,y and z direction.
        </Documentation>
      </IntVectorProperty>
      
    </SourceProxy>

	
    <!-- PolyStruct -->
    <SourceProxy name="PolyStruct" class="vtkPolyStruct"
     label="Polygon To Grid">
      <Documentation
         long_help="This filter generates a bounding box representation of the input."
         short_help="Generates a bounding box.">
        The Outline filter generates an axis-aligned bounding box for the input dataset. This filter operates on any type of dataset and produces polygonal output.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty
      name="XCubes"
      command="SetXCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
      <IntVectorProperty
      name="YCubes"
      command="SetYCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
      <IntVectorProperty
      name="ZCubes"
      command="SetZCubes"
      number_of_elements="1"
      default_values="10.0">
        <IntRangeDomain name="range" min="2" />
      </IntVectorProperty>
    </SourceProxy>

    <!-- Proximity Threshold -->
    <SourceProxy name="Proximity Threshold" class="vtkProximityThreshold">
      <InputProperty
        name="Source"
        command="SetSourceConnection" >
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
      <DoubleVectorProperty
       name="Distance"
       command="SetDistance"
       number_of_elements="1"
       default_values="-1">
      </DoubleVectorProperty>
      <IntVectorProperty
        name="Invert"
        command="SetInvert"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <IntVectorProperty
       name="AllScalars"
       command="SetAllScalars"
       number_of_elements="1"
       default_values="1">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
    </SourceProxy>
	
	
	<!-- Proximity To Lines -->
    <SourceProxy name="Proximity To Lines" class="vtkProximityToLines">
      <!-- the lines -->
      <InputProperty name="Source" label="Lines" command="SetSourceConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Something
        </Documentation>
      </InputProperty>
	  
      <InputProperty name="Input" label="Points" command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Something
        </Documentation>
      </InputProperty>      

      <IntVectorProperty
        name="NClosestLines"
        command="SetNClosestLines"
        number_of_elements="1"
        default_values="1">
      </IntVectorProperty>      

    </SourceProxy>	

    <!-- Radial Distance -->
    <!--<SourceProxy name="Radial Distance" class="vtkRadialDistance">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>
      <DoubleVectorProperty
       name="Measurement Point"
       command="SetMeasurePoint"
       number_of_elements="3"
       default_values="0 0 0">
      </DoubleVectorProperty>

      <IntVectorProperty
       name="Step Number"
       command="SetStepNumber"
       number_of_elements="1"
       default_values="1">
        <IntRangeDomain name="range" min="1" max="100"/>
      </IntVectorProperty>
    </SourceProxy>-->
    
    <SourceProxy name="Radial Distance" class="vtkRadialDistance">            
      <InputProperty
        name="Input"
        command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkDataSet"/>
           </DataTypeDomain>                            
      </InputProperty>
      <DoubleVectorProperty
         name="MeasurePoint"
         command="SetMeasurePoint"
         number_of_elements="3"
         animateable="1"
         default_values="0.0 0.0 0.0">
         <DoubleRangeDomain name="range"/>
      </DoubleVectorProperty>
        
      <IntVectorProperty
         name="Step Number"
         command="SetStepNumber"
         number_of_elements="1"
         default_values="1">
         <IntRangeDomain name="range" min="1" max="100"/>
      </IntVectorProperty>
            
      <Hints>
        <PropertyGroup type="PointSource" >
          <Property function="WorldPosition"  name="MeasurePoint" />
        </PropertyGroup>
      </Hints>
    </SourceProxy>
    
    <SourceProxy name="RegexThreshold" class="vtkRegexThreshold">
      <InputProperty name="Input"
		    command="SetInputConnection">
	<ProxyGroupDomain name="groups">
	  <Group name="sources"/>
	  <Group name="filters"/>
	</ProxyGroupDomain>
	<DataTypeDomain name="input_type">
	  <DataType value="vtkDataSet"/>
	</DataTypeDomain>
	<InputArrayDomain name="input_array" number_of_components="1">
	  <RequiredProperties>
	    <Property name="SelectInputScalars" 
		      function="FieldDataSelection"/>
	  </RequiredProperties>
	</InputArrayDomain>
      </InputProperty>
      <StringVectorProperty 
        name="SelectInputScalars" 
        command="SetInputArrayToProcess"
	number_of_elements="5"
	element_types="0 0 0 0 2"
	label="Scalars">
	<ArrayListDomain name="array_list" 
			 attribute_type="Scalars">
	  <RequiredProperties>
	    <Property name="Input" function="Input"/>
	  </RequiredProperties>
	</ArrayListDomain>
	<FieldDataDomain name="field_list">
	  <RequiredProperties>
	    <Property name="Input" function="Input"/>
	  </RequiredProperties>
	</FieldDataDomain>
      </StringVectorProperty>
      
      <StringVectorProperty
       name="Regex"
       command="SetRegex"
       number_of_elements="1"
       default_values="Regex">                     
     </StringVectorProperty>
     
      <IntVectorProperty 
        name="AllScalars" 
        command="SetAllScalars" 
        number_of_elements="1"
        default_values="1" > 
       <BooleanDomain name="bool"/>
       <Documentation>
         If the value of this property is 1, then a cell is only included in the output if the value of the selected array for all its points is within the threshold. This is only relevant when thresholding by a point-centered array.
       </Documentation>
     </IntVectorProperty>
     <Hints>
       <Visibility replace_input="2" />
     </Hints>
   </SourceProxy>

    <!-- RelativeTransform -->
    <SourceProxy name="RelativeTransform" class="vtkRelativeTransform" label="Relative Transform">

      <Documentation
        long_help="Performs a transform on a data set about its centroid instead of (0,0,0)."
        short_help="Performs a transform on a data set about its centroid instead of (0,0,0).">
      </Documentation>

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          Something
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="Trans"
        command="SetTrans"
        number_of_elements="3"
        default_values="0 0 0">
        <Documentation>
          Set the relative translation about centroid in x,y,z.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
            name="Rot"
            command="SetRot"
            number_of_elements="3"
            default_values="0 0 0">
        <Documentation>
          Set the relative rotation about centroid in x,y,z.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
            name="Scale"
            command="SetScale"
            number_of_elements="3"
            default_values="1 1 1">
        <Documentation>
          Set the scale factor in x,y,z.
        </Documentation>
      </DoubleVectorProperty>    

    <DoubleVectorProperty
      name="Origin"
      command="SetOrigin"
      number_of_elements="3"
      default_values="0 0 0">
      <Documentation>
        Set the origin in x,y,z.
      </Documentation>
    </DoubleVectorProperty>
    </SourceProxy>
    
    <!-- Sequence Arrows -->
    <SourceProxy name="Sequence Arrows" class="vtkSequenceArrows">
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars" function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>


      </InputProperty>
      <StringVectorProperty
          name="SelectInputScalars"
          command="SetInputArrayToProcess"
          number_of_elements="5"
          element_types="0 0 0 0 2"
          label="Scalars">
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <DoubleVectorProperty
      name="Size"
      command="SetSize"
      number_of_elements="1"
      default_values="1.0">
      </DoubleVectorProperty>
    </SourceProxy>

    <!-- Sum Billboard-->
    <SourceProxy name="SumBillboard" class="vtkSumBillboard">
      <InputProperty name="Input"
		    command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>

        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>

        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>

      </InputProperty>
      <StringVectorProperty
        name="SelectInputScalars"
        command="SetInputArrayToProcess"
	number_of_elements="5"
	element_types="0 0 0 0 2"
	label="Scalars">
        <ArrayListDomain name="array_list"
             attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>

      <StringVectorProperty
         name="Format"
         command="SetFormat"
   number_of_elements="1"
   default_values="Total Value ">
      </StringVectorProperty>
	  
		<IntVectorProperty
        name="NDecimals"
        command="SetNDecimals"
	number_of_elements="1"
	default_values="2">     
      </IntVectorProperty>	

     <Hints>
       <Visibility replace_input="0" />
       <OutputPort name="Output-0" index="0" type="text" />
     </Hints>
    </SourceProxy>


    <!-- SurfaceReconstructor -->
    <SourceProxy name="SurfaceReconstructor" class="vtkSurfaceReconstructor" label="Surface Reconstructor">

      <Documentation
        long_help="takes a list of points assumed to lie on
          the surface of a solid 3D object. A signed measure of the distance to the
          surface is computed and sampled on a regular grid. The grid can then be
          contoured at zero to extract the surface. The default values for
          neighborhood size and sample spacing should give reasonable results for
          most uses but can be set if desired. This procedure is based on the PhD
          work of Hugues Hoppe: http://www.research.microsoft.com/~hoppe"
        short_help="Approximate surface reconstruction from a data set of points.">
      </Documentation>

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          Something
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="NeighborhoodSize"
        command="SetNeighborhoodSize"
        number_of_elements="1"
        default_values="20">
        <Documentation>
          Specify the number of neighbors each point has,
          used for estimating the local surface orientation.

          The default value of 20 should be OK for most applications,
          higher values can be specified if the spread of points is uneven.

          Values as low as 10 may yield adequate results for some surfaces.

          Higher values cause the algorithm to take longer.

          Higher values will cause errors on sharp boundaries.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="Resolution"
        command="SetResolution"
        number_of_elements="1"
        default_values="1">
        <Documentation>
          Will adjust the spacing of the 3D sampling grid. 1x resolution is a reasonable first guess for most surfaces.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="1" text="1x (Try this first with new data sets)" />
          <Entry value="2" text="2x" />
          <Entry value="4" text="4x" />
          <Entry value="8" text="8x" />
          <Entry value="16" text="16x " />
          <Entry value="32" text="32x " />
          <Entry value="64" text="64x " />
        </EnumerationDomain>
      </IntVectorProperty>

    </SourceProxy>
    <!-- Tensor Glyph -->
     <SourceProxy name="Tensor Glyph" class="vtkTensorGlyphFilter">
            
          <InputProperty
              name="Source"
              command="SetSourceConnection" >
            <ProxyGroupDomain name="groups">
              <Group name="sources"/>
              <Group name="filters"/>
            </ProxyGroupDomain>
            <DataTypeDomain name="input_type">
              <DataType value="vtkPolyData"/>
            </DataTypeDomain>
          </InputProperty>
            
          <InputProperty
            name="Input"
            command="SetInputConnection">
               <ProxyGroupDomain name="groups">
                 <Group name="sources"/>
                 <Group name="filters"/>
               </ProxyGroupDomain>
               <DataTypeDomain name="input_type">
                 <DataType value="vtkDataSet"/>
               </DataTypeDomain>                       
          </InputProperty>

          <IntVectorProperty
             name="Scaling"
             command="SetScaling"
             number_of_elements="1"
             default_values="1" >
            <BooleanDomain name="bool"/>
            <Documentation>
              Turn on/off scaling of glyph with eigenvalues
            </Documentation>
          </IntVectorProperty>

          <DoubleVectorProperty name="ScaleFactor"
            command="SetScaleFactor"
            number_of_elements="1"
            animateable="1"
            default_values="0.5">
            <DoubleRangeDomain name="range" min="0"/>
            <Documentation>
              Specify scale factor to scale object by. (Scale factor always affects output even if scaling is off.)
            </Documentation>
          </DoubleVectorProperty>

            <IntVectorProperty
               name="ThreeGlyphs"
               command="SetThreeGlyphs"
               number_of_elements="1"
               default_values="0" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off drawing three glyphs
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="Symmetric"
               command="SetSymmetric"
               number_of_elements="1"
               default_values="0" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off drawing a mirror of each glyph
              </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty
               name="Length"
               command="SetLength"
               number_of_elements="1"
               animateable="1"
               default_values="0.0" >
              <DoubleRangeDomain name="range" min="0" />
              <Documentation>
                Set the distance, along x, from the origin to the end of the
                source glyph. It is used to draw the symmetric glyphs.
              </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty
               name="ExtractEigenvalues"
               command="SetExtractEigenvalues"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off extraction of eigenvalues from tensor.
              </Documentation>
            </IntVectorProperty>            
            
            <IntVectorProperty
               name="ColorGlyphs"
               command="SetColorGlyphs"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off coloring of glyph with input scalar data or
                eigenvalues. If false, or input scalar data not present, then the
                scalars from the source object are passed through the filter.
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="ColorMode"
               command="SetColorMode"
               number_of_elements="1"
               default_values="0" >              
              <EnumerationDomain name="enum">
                <Entry value="0" text="Color By Scalars"/>
                <Entry value="1" text="Color By Eigenvalues"/>
              </EnumerationDomain>              
              <Documentation>
                Set the color mode to be used for the glyphs.  This can be set to
                use the input scalars (default) or to use the eigenvalues at the
                point.  If ThreeGlyphs is set and the eigenvalues are chosen for
                coloring then each glyph is colored by the corresponding
                eigenvalue and if not set the color corresponding to the largest
                eigenvalue is chosen.
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="EigenvaluesProduct"
               command="SetEigenvaluesProduct"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                if COLOR_BY_EIGENVALUES is active, setting this value to 1
                will allow coloring by eigenvalues product instead
                of maximum eigenvalue. if COLOR_BY_EIGENVALUES is not used
                this property has no effect
              </Documentation>
            </IntVectorProperty>            
            
            <IntVectorProperty
               name="ClampScaling"
               command="SetClampScaling"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                 Turn on/off scalar clamping. If scalar clamping is on, the ivar
                 MaxScaleFactor is used to control the maximum scale factor. (This is
                 useful to prevent uncontrolled scaling near singularities.)
              </Documentation>
            </IntVectorProperty>


            <DoubleVectorProperty name="MaxScaleFactor"
              command="SetMaxScaleFactor"
              number_of_elements="1"
              animateable="1"
              default_values="0.5">
              <DoubleRangeDomain name="range" min="0"/>
              <Documentation>
                Set/Get the maximum allowable scale factor. This value is compared to the
                combination of the scale factor times the eigenvalue. If less, the scale
                factor is reset to the MaxScaleFactor. The boolean ClampScaling has to
                be "on" for this to work.
              </Documentation>
            </DoubleVectorProperty>            
            
          </SourceProxy>

    <!-- Time Billboard -->
    <SourceProxy name="TimeBillboard" class="vtkTimeBillboard">
		<InputProperty name="Input"
			command="SetInputConnection">
			<ProxyGroupDomain name="groups">
				<Group name="sources"/>
				<Group name="filters"/>
			</ProxyGroupDomain>
			<DataTypeDomain name="input_type">
				<DataType value="vtkDataSet"/>
			</DataTypeDomain>
			<InputArrayDomain name="input_array" number_of_components="1">
				<RequiredProperties>
					<Property name="SelectInputScalars"
					function="FieldDataSelection"/>
				</RequiredProperties>
			</InputArrayDomain>
		</InputProperty>
		
		<StringVectorProperty
			name="SelectInputScalars"
			command="SetInputArrayToProcess"
			number_of_elements="5"
			element_types="0 0 0 0 2"
			label="Scalars">
			<ArrayListDomain name="array_list"
				attribute_type="Scalars">
				<RequiredProperties>
					<Property name="Input" function="Input"/>
				</RequiredProperties>
			</ArrayListDomain>
			<FieldDataDomain name="field_list">
				<RequiredProperties>
					<Property name="Input" function="Input"/>
				</RequiredProperties>
			</FieldDataDomain>
		</StringVectorProperty>

		<IntVectorProperty
			name="TimeFormat"
			command="SetTimeFormat"
			number_of_elements="1"
			default_values="0" >
			<EnumerationDomain name="enum">
				<Entry value="0" text="MSDate"/>
				<Entry value="1" text="Julian"/>
				<Entry value="2" text="ModifiedJulian"/>
				<Entry value="3" text="Matlab"/>
			</EnumerationDomain>
		</IntVectorProperty>

		<StringVectorProperty
			name="Format"
			command="SetFormat"
			number_of_elements="1"
			default_values="%Y-%m-%dT%H:%M:%S">
		</StringVectorProperty>

		<StringVectorProperty
			name="Text"
			command="SetText"
			number_of_elements="1"
			default_values="The Start and End Time's are: ">
		</StringVectorProperty>

		<Hints>
			<Visibility replace_input="0" />
			<OutputPort name="Output-0" index="0" type="text" />
		</Hints>
	</SourceProxy>
    
    <!-- TimeThreshold -->
    <SourceProxy name="TimeThreshold" class="vtkTimeThreshold">

      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars" function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars"
        command="SetInputArrayToProcess"
	      number_of_elements="5"
	      element_types="0 0 0 0 2"
	      label="Scalars">
        <ArrayListDomain name="array_list"
			    attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>

      <IntVectorProperty
        name="TimeFormat"
        command="SetTimeFormat"
        number_of_elements="1"
        default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="MSDate"/>
          <Entry value="1" text="Julian"/>
          <Entry value="2" text="ModifiedJulian"/>
          <Entry value="3" text="Matlab"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <StringVectorProperty
        name="UpperDate"
        command="SetUpperChar"
	      number_of_elements="1"
	      default_values="2008-01-01T00:00:00">
      </StringVectorProperty>

      <StringVectorProperty
        name="LowerDate"
        command="SetLowerChar"
	      number_of_elements="1"
	      default_values="1985-01-01T12:00:00">
      </StringVectorProperty>

      <IntVectorProperty
        name="AllScalars"
        command="SetAllScalars"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If the value of this property is 1, then a cell is only included in the output if the value of the selected array for all its points is within the threshold. This is only relevant when thresholding by a point-centered array.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <Visibility replace_input="2" />
      </Hints>
    </SourceProxy>

    <!-- Top Of Cell -->
    <SourceProxy name="Top Of Cell" class="vtkTopOfCell">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>


      <IntVectorProperty
        name="TopOfCellType"
        command="SetTopOfCellType"
        number_of_elements="1"
        default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="Xmax"/>
          <Entry value="1" text="Xmin"/>
          <Entry value="2" text="Ymax" />
          <Entry value="3" text="Ymin" />
          <Entry value="4" text="Zmax" />
          <Entry value="5" text="Zmin" />

        </EnumerationDomain>

      </IntVectorProperty>
    </SourceProxy>
    <SourceProxy name="Delaunay3D" class="vtkDelaunay3D" label="Delaunay 3D">
      <Documentation
         long_help="Create 3D Delaunay triangulation of input points. 
It expects a vtkPointSet as input and produces vtkPolyData as output. 
The points are expected to be in a mostly planar distribution."
         short_help="Create 3D Delaunay triangulation of input points.">
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPointSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input dataset to the Delaunay 2D filter.
        </Documentation>
      </InputProperty>
      <DoubleVectorProperty name="Alpha"
        command="SetAlpha"
        number_of_elements="1"
        animateable="1"
        default_values="0.0">
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          The value of this property controls the output of this filter. For a non-zero alpha value, only edges or triangles contained within a sphere centered at mesh vertices will be output. Otherwise, only triangles will be output.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="Tolerance"
        command="SetTolerance"
        number_of_elements="1"
        animateable="1"
        default_values="0.00001">
        <DoubleRangeDomain name="range" min="0" max="1.0" />
        <Documentation>
          This property specifies a tolerance to control discarding of closely spaced points. This tolerance is specified as a fraction of the diagonal length of the bounding box of the points.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="Offset"
        command="SetOffset"
        number_of_elements="1"
        animateable="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0.75"/>
        <Documentation>
          This property is a multiplier to control the size of the initial, bounding Delaunay triangulation.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="BoundingTriangulation"
        command="SetBoundingTriangulation"
        number_of_elements="1"
        animateable="1"
        default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, bounding triangulation points (and associated triangles) are included in the output. These are introduced as an initial triangulation to begin the triangulation process. This feature is nice for debugging output.
        </Documentation>
      </IntVectorProperty>
    </SourceProxy>    
  </ProxyGroup>



  <ProxyGroup name="sources">
    <SourceProxy name="DiskSource" class="vtkDiskSource" label="Disk Source">

      <DoubleVectorProperty name="Outer Radius"
        command="SetOuterRadius"
        number_of_elements="1"
        animateable="1"
        default_values="2">
      </DoubleVectorProperty>

      <DoubleVectorProperty name="Inner Radius"
        command="SetInnerRadius"
        number_of_elements="1"
        animateable="1"
        default_values="1">
      </DoubleVectorProperty>

      <IntVectorProperty name="Radial Resolution"
        command="SetRadialResolution"
        number_of_elements="1"
        animateable="1"
        default_values="10">
      </IntVectorProperty>

      <IntVectorProperty name="Circumferential Resolution"
        command="SetCircumferentialResolution"
        number_of_elements="1"
        animateable="1"
        default_values="10">
      </IntVectorProperty>
    </SourceProxy>
  </ProxyGroup>
  
  <ProxyGroup name="views">
    <ViewProxy name="pqPlotPropertiesOverTime"
      base_proxygroup="views" base_proxyname="BarChartView"
      representation_name="BarChartRepresentation">
    </ViewProxy>
  </ProxyGroup>

  <ProxyGroup name="filters">
    <SourceProxy name="Plot Properties Over Time" class="vtkPlotPropertiesOverTime">
      <InputProperty name="Input" command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array_1" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>

      <StringVectorProperty
				name="MSDate_Property"
        label="Ms Date Property"
				command="SetMSDate_Property"
				number_of_elements="1"
				animateable="0">
        <ArrayListDomain name="array_list"
												 attribute_type="Scalars"
												input_domain_name="input_array_1">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <StringVectorProperty
				name="Y_Property"
        label="Y Property"
				command="SetY_Property"
				number_of_elements="1"
				animateable="0">
        <ArrayListDomain name="array_list"
												 attribute_type="Scalars"
												input_domain_name="input_array_1">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <IntVectorProperty name="Days"
         command="SetDays"
         number_of_elements="1"
         default_values="0">
      </IntVectorProperty>

      <IntVectorProperty name="Months"
         command="SetMonths"
         number_of_elements="1"
         default_values="0">
      </IntVectorProperty>

      <IntVectorProperty name="Years"
         command="SetYears"
         number_of_elements="1"
         default_values="0">
      </IntVectorProperty>      

      <!--IntVectorProperty name="BinCount"
         command="SetBinCount"
         number_of_elements="1"
         default_values="10">
        <IntRangeDomain name="range" min="1" max="256"/>
        <Documentation>
          The value of this property specifies the number of bins for the histogram.
        </Documentation>
      </IntVectorProperty-->      


      <Hints>
        <!-- View can be used to specify the preferred view for the proxy -->
        <View type="pqPlotPropertiesOverTime" />
      </Hints>
    </SourceProxy>
    
    <!-- Poly Line Add Points -->
    <SourceProxy name="Add Points" class="vtkPolyLineAddPoints">
    <InputProperty
         name="Input"
         command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkPolyData"/>
           </DataTypeDomain>
           <Documentation>
             This property specifies the input dataset to the PolyLineAddPoints filter.
           </Documentation>
      </InputProperty>
      
      <IntVectorProperty
        name="Multiply Factor"
        command="SetAddFactor"
        number_of_elements="1"
        animateable="1"
        default_values="2" >
       <IntRangeDomain name="range" min="2" max="10" />
       <Documentation>
         Factor to multiply the number of points by
       </Documentation>
     </IntVectorProperty>
    </SourceProxy>
    <!-- End Poly Line Add Points -->
    	 
	<SourceProxy name="Ruler" class="vtkRuler">

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>      
      
      <DoubleVectorProperty
         name="Point1"
         command="SetPoint1"
         number_of_elements="3"
         animateable="1"
         default_values="-0.5 0.0 0.0" >
        <DoubleRangeDomain name="range" />
        <Documentation>
          This property controls the coordinates of the first endpoint of the line.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Point2"
         command="SetPoint2"
         number_of_elements="3"
         animateable="1"
         default_values="0.5 0.0 0.0" >
        <DoubleRangeDomain name="range" />
        <Documentation>
          This property controls the coordinates of the second endpoint of the line.
        </Documentation>
      </DoubleVectorProperty>

      <Hints>
        <PropertyGroup type="LineSource" label="Line">
          <Property function="Point1WorldPosition" name="Point1" />
          <Property function="Point2WorldPosition" name="Point2" />
        </PropertyGroup>
      </Hints>

      <DoubleVectorProperty
       name="distance"
       command="Getdistance"
       number_of_elements="1"
       information_only="1"
       default_values="-1.0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
       name="xDistance"
       command="GetxDistance"
       number_of_elements="1"
       information_only="1"
       default_values="-1.0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
       name="yDistance"
       command="GetyDistance"
       number_of_elements="1"
       information_only="1"
       default_values="-1.0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
       name="zDistance"
       command="GetzDistance"
       number_of_elements="1"
       information_only="1"
       default_values="-1.0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>
    </SourceProxy>
	
    <SourceProxy name="Fit Dataset" class="vtkFitDataset">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty name="Type"
       command="SetType"
       number_of_elements="1"
       default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Line"/>
          <Entry value="1" text="Rectangle"/>          
          <Entry value="2" text="Convex Polygon (2D)"/>
          <!--Entry value="4" text="Convex Polyhedron (3D)"/-->
          <Entry value="3" text="Box"/>
        </EnumerationDomain>
      </IntVectorProperty>      
	
    </SourceProxy>	
    <SourceProxy name="Mine24D to Map3D" class="vtkMine24DtoMap3D">
      
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>        
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>       
        </DataTypeDomain>        
        <InputArrayDomain name="input_array_1" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>

        <InputArrayDomain name="input_array_2" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>

      <StringVectorProperty
				name="SegmentID"
				command="SetSegmentID"
				number_of_elements="1"
				animateable="0"
      	label="Segment ID">
        <ArrayListDomain name="array_list"
												 attribute_type="Scalars"
												input_domain_name="input_array_1">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of the segment id array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
				name="SegmentColor"
				command="SetSegmentColor"
				number_of_elements="1"
				animateable="0"
      	label="Segment Color">
        <ArrayListDomain name="array_list"
												 attribute_type="Scalars"
												input_domain_name="input_array_2">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of the segment color array.
        </Documentation>
      </StringVectorProperty>
      
      <IntVectorProperty name="Simplification"
       command="SetSimplification"
       number_of_elements="1"
       animateable="1"
       default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          this method is used to simplify simple stopes. for each stopes, this method
          will find the 8 vertices of the top and bottom faces and link them togother.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="SimplifyMesh"
       command="SetSimplifyMesh"
       number_of_elements="1"
       animateable="1"
       default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          
        </Documentation>
      </IntVectorProperty>      

      <IntVectorProperty name="Approximation"
       command="SetApproximation"
       number_of_elements="1"
       animateable="1"
       default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          This methode is used for stopes having a complex geometry. This methode
          may not work correctly on very small stopes. To build the approximated stopes in paraview,
          this methode approximate stopes faces with an oriented bounding rectangle.
          The speed of this methode depend on the parameter Aproximation precision. if Aproximation precision is small, the result
          is better but the algorithm will be longer.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="Conversion"
       command="SetConversion"
       number_of_elements="1"
       animateable="1"
       default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          This method will convert all cells and points to map3d format.
          The output in map3d will be identical to the Mine24d input.
        </Documentation>
      </IntVectorProperty>
      
      <DoubleVectorProperty name="AngleTolerance"
       command="SetAngleTolerance"
       number_of_elements="1"
       default_values="30">
        <Documentation>
         This variable is required for "Simplification" option
         This variable define what Angle tolerance will be used to
         detect plans perpendicular to Z. We need the plans 
         perpendicular to Z to find the top and bottom faces
         of a segment.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty name="AngleStep"
       command="SetAngleStep"
       number_of_elements="1"
       default_values="5">
        <Documentation>
          This variable is used with approximation option:
          This will set the precision of the oriented bounding
          rectangle of faces.
          For excelent approximation: 0 to 2.5 
          Very good approximation: 2.5 to 5 
          good approximation: 5 to ...(depend on data)
             If you reduce this variable, you will have a better result but
          the algorithm will be longer. 
        </Documentation>
      </DoubleVectorProperty>      

      <IntVectorProperty name="WithActivity"
       command="SetWithActivity"
       number_of_elements="1"
       animateable="1"
       default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Check this option if you want to add Activities to the output
          you must have an activity file corresponding to the input.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty
          name ="ActivityFile"
          command="SetActivityFile"
          number_of_elements ="1"
          default_values="C:\">
      </StringVectorProperty>      
      
      <IntVectorProperty name="ActivityStep"
       command="SetActivityStep"
       number_of_elements="1"
       animateable="1"
       default_values="30">
        <Documentation>
          This variable is used to form Mining Blocks.
          Each Block will have a period equal to this variable
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="dateFormat"
       command="SetdateFormat"
       number_of_elements="1"
       default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Select date format"/>
          <Entry value="1" text="YYYY-MM-DD"/>
          <Entry value="2" text="MM/DD/YYYY"/>
        </EnumerationDomain>        
      </IntVectorProperty>


      <IntVectorProperty
         name="PieceInvariant"
         command="SetPieceInvariant"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, the whole data set will be processed at once so that cleaning the data set always produces the same results. If it is set to 0, the data set can be processed one piece at a time, so it is not necessary for the entire data set to fit into memory; however the results are not guaranteed to be the same as they would be if the Piece invariant option was on. Setting this option to 0 may produce seams in the output dataset when ParaView is run in parallel.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Tolerance"
         command="SetTolerance"
         number_of_elements="1"
         animateable="1"
         default_values="0.0" >
        <DoubleRangeDomain name="range" min="0" max="1" />
        <Documentation>
          If merging nearby points (see PointMerging property) and not using absolute tolerance (see ToleranceIsAbsolute property), this property specifies the tolerance for performing merging as a fraction of the length of the diagonal of the bounding box of the input data set.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="AbsoluteTolerance"
         command="SetAbsoluteTolerance"
         number_of_elements="1"
         default_values="0" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          If merging nearby points (see PointMerging property) and using absolute tolerance (see ToleranceIsAbsolute property), this property specifies the tolerance for performing merging in the spatial units of the input data set.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="ToleranceIsAbsolute"
         command="SetToleranceIsAbsolute"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          This property determines whether to use absolute or relative (a percentage of the bounding box) tolerance when performing point merging.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertLinesToPoints"
         command="SetConvertLinesToPoints"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate lines (a "line" whose endpoints are at the same spatial location) will be converted to points.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertPolysToLines"
         command="SetConvertPolysToLines"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate polygons (a "polygon" with only two distinct point coordinates) will be converted to lines.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ConvertStripsToPolys"
         command="SetConvertStripsToPolys"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, degenerate triangle strips (a triangle "strip" containing only one triangle) will be converted to triangles.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="PointMerging"
         command="SetPointMerging"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, then points will be merged if they are within the specified Tolerance or AbsoluteTolerance (see the Tolerance and AbsoluteTolerance propertys), depending on the value of the ToleranceIsAbsolute property. (See the ToleranceIsAbsolute property.) If this property is set to 0, points will not be merged.
        </Documentation>
      </IntVectorProperty>
    </SourceProxy>	
    
  </ProxyGroup>
  
  <!-- Begin StringPropertyToIndex -->
  <ProxyGroup name="filters">
    <SourceProxy name="String Array To Index" class="vtkStringArrayToIndex">
	
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>        
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array_1" number_of_components="1">
          <RequiredProperties>
            <Property name="SelectInputScalars"
                      function="FieldDataSelection"/>
          </RequiredProperties>
        </InputArrayDomain>
      </InputProperty>
	
		<StringVectorProperty
		  name="StrProp"
		  command="SetStrProp"
		  number_of_elements="1"
		  default_values="0"
		  label="Array:">     
		  <ArrayListDomain
		    name="array_list"
		    attribute_type="Scalars"
		    input_domain_name="input_array_1">
		    <RequiredProperties>
			  <Property name="Input" function="Input"/>
		    </RequiredProperties>
		  </ArrayListDomain>
		</StringVectorProperty>
      
	<StringVectorProperty
      name="IndexName"
      command="SetIndexName"
	  label="Index Name:"
      number_of_elements="1"
      default_values="Enter Name">
    </StringVectorProperty>

    </SourceProxy>
  </ProxyGroup>
  <!-- End StringPropertyToIndex -->  
  
</ServerManagerConfiguration>
